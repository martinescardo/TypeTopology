Andrew Sneap

This file defines positive rationals, which are useful for metric spaces.

\begin{code}
{-# OPTIONS --safe --without-K #-}

open import MLTT.Spartan renaming (_+_ to _‚àî_)
open import Notation.Order
open import Rationals.Type
open import Rationals.Abs
open import Rationals.Addition renaming (_+_ to _‚Ñö+_)
open import Rationals.Multiplication renaming (_*_ to _‚Ñö*_)
open import Rationals.Order
open import UF.Base

module Rationals.Positive where

‚Ñö‚Çä : ùì§‚ÇÄ Ãá
‚Ñö‚Çä = Œ£ q Íûâ ‚Ñö , 0‚Ñö < q

_<‚Ñö‚Çä_ : (p q : ‚Ñö‚Çä) ‚Üí ùì§‚ÇÄ Ãá
(p , _) <‚Ñö‚Çä (q , _) = p < q

_‚â§‚Ñö‚Çä_ : (p q : ‚Ñö‚Çä) ‚Üí ùì§‚ÇÄ Ãá
(p , _) ‚â§‚Ñö‚Çä (q , _) = p ‚â§ q

instance
 Strict-Order-‚Ñö‚Çä-‚Ñö‚Çä : Strict-Order ‚Ñö‚Çä ‚Ñö‚Çä
 _<_ {{Strict-Order-‚Ñö‚Çä-‚Ñö‚Çä}} = _<‚Ñö‚Çä_

 Order-‚Ñö‚Çä-‚Ñö‚Çä : Order ‚Ñö‚Çä ‚Ñö‚Çä
 _‚â§_ {{Order-‚Ñö‚Çä-‚Ñö‚Çä}} = _‚â§‚Ñö‚Çä_

 Strict-Order-‚Ñö‚Çä-‚Ñö : Strict-Order ‚Ñö‚Çä ‚Ñö
 _<_ {{Strict-Order-‚Ñö‚Çä-‚Ñö}} (p , _) q = p < q

 Strict-Order-‚Ñö-‚Ñö‚Çä : Strict-Order ‚Ñö ‚Ñö‚Çä
 _<_ {{Strict-Order-‚Ñö-‚Ñö‚Çä}} p (q , _) = p < q

_+_ : ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä
(p , 0<p) + (q , 0<q) = p ‚Ñö+ q , ‚Ñö<-adding-zero p q 0<p 0<q

1‚Ñö‚Çä : ‚Ñö‚Çä
1‚Ñö‚Çä = 1‚Ñö , 0<1

_*_ : ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä
(p , 0<p) * (q , 0<q)
 = p ‚Ñö* q , ‚Ñö<-pos-multiplication-preserves-order p q 0<p 0<q

1/2*_ : ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä
1/2* p = (1/2 , 0<1/2) * p

1/4*_ : ‚Ñö‚Çä ‚Üí ‚Ñö‚Çä
1/4* p = (1/4 , 0<1/4) * p

\end{code}
