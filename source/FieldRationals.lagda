\begin{code}

{-# OPTIONS --without-K --exact-split --safe #-}

open import SpartanMLTT renaming (_+_ to _‚àî_) --TypeTopology

open import OrderNotation --TypeTopology
open import UF-FunExt -- TypeTopology

open import FieldAxioms
open import Rationals
open import RationalsAddition
open import RationalsMultiplication
open import RationalsNegation
open import RationalsOrder

module FieldRationals (fe : Fun-Ext) where

_#_ : (x y : ‚Ñö) ‚Üí ùì§‚ÇÄ Ãá
x # y  = ¬¨ (x ‚â° y)

0‚Ñö#1‚Ñö : 0‚Ñö # 1‚Ñö
0‚Ñö#1‚Ñö = ‚Ñö-zero-not-one fe

RationalsField : Field-structure ‚Ñö { ùì§‚ÇÄ }
RationalsField = (_+_ , _*_ , _#_) , (‚Ñö-is-set fe)
                                   , (‚Ñö+-assoc fe)
                                   , (‚Ñö*-assoc fe)
                                   , ‚Ñö+-comm
                                   , ‚Ñö*-comm
                                   , ‚Ñö-distributivity fe
                                   , (0‚Ñö , 1‚Ñö) , 0‚Ñö#1‚Ñö
                                               , (‚Ñö-zero-left-neutral fe)
                                               , ‚Ñö+-inverse fe
                                               , ‚Ñö-mult-left-id fe
                                               , ‚Ñö*-inverse fe

RationalsOrderedField : Ordered-field-structure { ùì§‚ÇÄ } { ùì§‚ÇÄ } { ùì§‚ÇÄ } ‚Ñö RationalsField
RationalsOrderedField = _<_ , ‚Ñö<-addition-preserves-order , ‚Ñö<-pos-multiplication-preserves-order

RationalsOrderedField' : Ordered-Field ùì§‚ÇÄ { ùì§‚ÇÄ } { ùì§‚ÇÄ }
RationalsOrderedField' = (‚Ñö , RationalsField) , RationalsOrderedField

