Andrew Sneap


\begin{code}
{-# OPTIONS --without-K --exact-split --safe #-}

open import SpartanMLTT renaming (_+_ to _‚àî_)  -- TypeTopology

open import NaturalsAddition renaming (_+_ to _‚Ñï+_) -- TypeTopology
open import NaturalsOrder --TypeTopology
open import OrderNotation -- TypeTopology
open import UF-FunExt -- TypeTopology
open import UF-PropTrunc --TypeTopology
open import UF-Subsingletons --TypeTopology

open import Rationals
open import RationalsAddition
open import RationalsOrder

module MetricSpaceAltDef
  (pt : propositional-truncations-exist)
  (fe : Fun-Ext)
  (pe : Prop-Ext)
 where 

open PropositionalTruncation pt
open import DedekindReals pe pt fe
open import DedekindRealsOrder pe pt fe

m1a : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (B : X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) ‚Üí ùì§ Ãá
m1a X B = (x y : X) ‚Üí ((Œµ : ‚Ñö) ‚Üí (l : 0‚Ñö < Œµ) ‚Üí B x y Œµ l) ‚Üí x ‚â° y

m1b : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (B : X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) ‚Üí ùì§ Ãá
m1b X B = (x : X) ‚Üí ((Œµ : ‚Ñö) ‚Üí (l : 0‚Ñö < Œµ) ‚Üí B x x Œµ l)

m2 : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (B : X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) ‚Üí ùì§ Ãá
m2 X B = (x y : X) ‚Üí (Œµ : ‚Ñö) ‚Üí (l : 0‚Ñö < Œµ) ‚Üí B x y Œµ l ‚Üí B y x Œµ l

m3 : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (B : X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) ‚Üí ùì§ Ãá
m3 X B = (x y : X) ‚Üí (Œµ‚ÇÅ Œµ‚ÇÇ : ‚Ñö) ‚Üí (l‚ÇÅ : 0‚Ñö < Œµ‚ÇÅ) ‚Üí (l‚ÇÇ : 0‚Ñö < Œµ‚ÇÇ) ‚Üí Œµ‚ÇÅ < Œµ‚ÇÇ ‚Üí B x y Œµ‚ÇÅ l‚ÇÅ ‚Üí B x y Œµ‚ÇÇ l‚ÇÇ

m4 : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (B : X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) ‚Üí ùì§ Ãá
m4 X B = (x y z : X) ‚Üí (Œµ‚ÇÅ Œµ‚ÇÇ : ‚Ñö) ‚Üí (l‚ÇÅ : (0‚Ñö < Œµ‚ÇÅ)) ‚Üí (l‚ÇÇ : (0‚Ñö < Œµ‚ÇÇ)) ‚Üí B x y Œµ‚ÇÅ l‚ÇÅ ‚Üí B y z Œµ‚ÇÇ l‚ÇÇ ‚Üí B x z (Œµ‚ÇÅ + Œµ‚ÇÇ) (‚Ñö<-adding-zero Œµ‚ÇÅ Œµ‚ÇÇ l‚ÇÅ l‚ÇÇ)

metric-space : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí ùì§‚ÇÅ ‚äî ùì§ Ãá
metric-space X =
 Œ£ B Íûâ (X ‚Üí X ‚Üí (Œµ : ‚Ñö) ‚Üí 0‚Ñö < Œµ ‚Üí ùì§‚ÇÄ Ãá) , m1a X B √ó m1b X B √ó m2 X B √ó m3 X B √ó m4 X B

\end{code}

A space is a complete metric space if every cauchy sequence in a metric space is also a convergent sequence.

Convergent and Cauchy Sequences are also defined below. In a metric space, all convergent sequences are cauchy sequences.

A definition is also given for what it means for a function to be continous, and what it means for a subspace of a space to be dense.

It is also useful to define the type of positive rationals.

\begin{code}

‚Ñö‚Çä : ùì§‚ÇÄ Ãá
‚Ñö‚Çä = Œ£ Œµ Íûâ ‚Ñö , 0‚Ñö < Œµ

bounded-sequence : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí metric-space X ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí ùì§‚ÇÄ Ãá
bounded-sequence X (B , _) S = ‚àÉ K Íûâ ‚Ñö , ((x y : ‚Ñï) ‚Üí (l : (0‚Ñö < K)) ‚Üí B (S x) (S y) K l)

bounded-sequence-is-prop : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (m : metric-space X) ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí is-prop (bounded-sequence X m S)
bounded-sequence-is-prop X m S = ‚àÉ-is-prop

convergent-sequence : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí metric-space X ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí ùì§ Ãá
convergent-sequence X (B , _) S = ‚àÉ x Íûâ X , (((Œµ , l) : ‚Ñö‚Çä) ‚Üí Œ£ N Íûâ ‚Ñï , ((n : ‚Ñï) ‚Üí N < n ‚Üí B x (S n) Œµ l))

cauchy-sequence : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí metric-space X ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí ùì§‚ÇÄ Ãá
cauchy-sequence X (B , _) S = ((Œµ , l) : ‚Ñö‚Çä) ‚Üí Œ£ N Íûâ ‚Ñï , ((m n : ‚Ñï) ‚Üí N ‚â§ m ‚Üí N ‚â§ n ‚Üí B (S m) (S n) Œµ l)

convergent‚Üícauchy : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí (m : metric-space X) ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí ùì§ Ãá
convergent‚Üícauchy X m S = convergent-sequence X m S ‚Üí cauchy-sequence X m S

cauchy‚Üíconvergent : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí metric-space X ‚Üí (S : ‚Ñï ‚Üí X) ‚Üí ùì§ Ãá
cauchy‚Üíconvergent X m S = cauchy-sequence X m S ‚Üí convergent-sequence X m S

complete-metric-space : {ùì§ : Universe} ‚Üí (X : ùì§ Ãá) ‚Üí ùì§‚ÇÅ ‚äî ùì§ Ãá
complete-metric-space X = Œ£ m Íûâ (metric-space X) , ((S : ‚Ñï ‚Üí X) ‚Üí cauchy‚Üíconvergent X m S)


\end{code}
